# 可以设置级别：debug>info>error  
# debug：显示debug、info、error  
# info：显示info、error  
# error：只erro
# layout可以设置org.apache.log4j.TTCCLayout、org.apache.log4j.PatternLayout
log4j.rootLogger=debug,console,file

# 输出到控制台 
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.TTCCLayout
log4j.appender.console.layout.ConversionPattern=[mall-foreground] [%p] %d{yyyy-MM-dd HH\:mm\:ss SSS} [%t] | %C.%M(%L) %n %m %n

# 输出到文件DailyRollingFileAppender
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=${mall-foreground.root}\\WEB-INF\\logs\\foreground\\mall.log
log4j.appender.file.File.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.file.Append=true
log4j.appender.error.Threshold=INFO
#log4j.appender.file.MaxFileSize=5MB
#log4j.appender.file.MaxBackupIndex=200
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[mall-foreground] [%p] %d{yyyy-MM-dd HH\:mm\:ss SSS} [%t] %m | %C.%M(%L) %n

# druid
log4j.logger.druid.sql=info
log4j.logger.druid.sql.DataSource=info
log4j.logger.druid.sql.Connection=info
log4j.logger.druid.sql.Statement=DEBUG
log4j.logger.druid.sql.ResultSet=info

# hibernate
#输出sql语句到日志  
log4j.logger.org.hibernate.SQL=debug  
#将对应的参数占位符？换成传入的参数  
log4j.logger.org.hibernate.type=trace
